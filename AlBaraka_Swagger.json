{
  "swagger": "2.0",
  "info": {
    "title": "Core/ECM/AML API â€” K2 Adapter",
    "description": "Thin endpoints for Nintex K2: form-encoded requests; text/plain string responses.",
    "version": "1.0.0"
  },
  "host": "core-ecm-aml-api.onrender.com",
  "basePath": "/",
  "schemes": ["https"],
  "produces": ["text/plain"],
  "paths": {
    "/k2/core/customers/createCIF": {
      "post": {
        "summary": "K2: Create CIF (form in, text/plain out)",
        "description": "Creates a customer and returns the CIF as a stringified JSON object.",
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [
          { "name": "NationalID", "in": "formData", "type": "string", "maxLength": 14, "minLength": 14, "required": false },
          { "name": "PassportNo", "in": "formData", "type": "string", "required": false },
          { "name": "NameAr", "in": "formData", "type": "string", "required": true },
          { "name": "NameEn", "in": "formData", "type": "string", "required": false },
          { "name": "DOB", "in": "formData", "type": "string", "format": "date", "required": true },
          { "name": "Gender", "in": "formData", "type": "string", "enum": ["M", "F"], "required": true },
          { "name": "Address", "in": "formData", "type": "string", "required": false },
          { "name": "Mobile", "in": "formData", "type": "string", "required": true },
          { "name": "Email", "in": "formData", "type": "string", "format": "email", "required": false },
          { "name": "BranchCode", "in": "formData", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "OK. Body is a string (e.g., '{\"CIF\": 1000000001}')", "schema": { "type": "string" } },
          "400": { "description": "Bad Request", "schema": { "type": "string" } }
        }
      }
    },
    "/k2/core/customers/by-national-id": {
      "get": {
        "summary": "K2: Get customer by NationalID (text/plain)",
        "parameters": [
          { "name": "national_id", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "OK. Returns customer as a JSON string.", "schema": { "type": "string" } },
          "404": { "description": "Not Found", "schema": { "type": "string" } }
        }
      }
    },
    "/k2/core/accounts/createAccount": {
      "post": {
        "summary": "K2: Create account (DebitBlocked=TRUE) (form in, text/plain out)",
        "description": "Creates an account with DebitBlocked forced to TRUE. Returns AccountNumber as a JSON string.",
        "consumes": ["application/x-www-form-urlencoded"],
        "parameters": [
          { "name": "AccountNumber", "in": "formData", "type": "string", "required": true },
          { "name": "CIF", "in": "formData", "type": "integer", "format": "int64", "required": true },
          { "name": "AccountType", "in": "formData", "type": "string", "required": true },
          { "name": "Currency", "in": "formData", "type": "string", "maxLength": 3, "minLength": 3, "required": true },
          { "name": "ProductCode", "in": "formData", "type": "string", "required": false }
        ],
        "responses": {
          "200": { "description": "OK. Body is a string (e.g., '{\"AccountNumber\": \"ACC-001\"}')", "schema": { "type": "string" } },
          "400": { "description": "Bad Request", "schema": { "type": "string" } }
        }
      }
    },
    "/k2/core/accounts/by-cif": {
      "get": {
        "summary": "K2: Get accounts by CIF (text/plain)",
        "parameters": [
          { "name": "cif", "in": "query", "type": "integer", "format": "int64", "required": true },
          { "name": "limit", "in": "query", "type": "integer", "default": 50, "minimum": 1, "maximum": 500, "required": false }
        ],
        "responses": {
          "200": { "description": "OK. Returns accounts array as JSON string.", "schema": { "type": "string" } }
        }
      }
    },
    "/k2/ecm/folders/by-cif": {
      "get": {
        "summary": "K2: Get folder by CIF (latest) (text/plain)",
        "parameters": [
          { "name": "cif", "in": "query", "type": "integer", "format": "int64", "required": true }
        ],
        "responses": {
          "200": { "description": "OK. Returns folder as JSON string.", "schema": { "type": "string" } },
          "404": { "description": "Not Found", "schema": { "type": "string" } }
        }
      }
    },
    "/k2/ecm/documents/by-folder-request": {
      "get": {
        "summary": "K2: Get document by FolderId + RequestId (text/plain)",
        "parameters": [
          { "name": "folder_id", "in": "query", "type": "string", "format": "uuid", "required": true },
          { "name": "request_id", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "OK. Returns document as JSON string.", "schema": { "type": "string" } },
          "404": { "description": "Not Found", "schema": { "type": "string" } }
        }
      }
    },
    "/k2/aml/screenings/by-national-id": {
      "get": {
        "summary": "K2: Get screening by NationalID (latest) (text/plain)",
        "parameters": [
          { "name": "national_id", "in": "query", "type": "string", "required": true }
        ],
        "responses": {
          "200": { "description": "OK. Returns screening as JSON string.", "schema": { "type": "string" } },
          "404": { "description": "Not Found", "schema": { "type": "string" } }
        }
      }
    }
  }
}
